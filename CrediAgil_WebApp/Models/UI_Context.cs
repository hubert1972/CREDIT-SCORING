// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace UI.WEB.Models
{
    public partial class UI_Context : DbContext
    {
        public UI_Context()
        {
        }

        public UI_Context(DbContextOptions<UI_Context> options)
            : base(options)
        {
        }

        public virtual DbSet<Cargo> Cargo { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Cliente1> Cliente1 { get; set; }
        public virtual DbSet<ClientesV> ClientesV { get; set; }
        public virtual DbSet<CredencialesCdr> CredencialesCdr { get; set; }
        public virtual DbSet<CreditosCliente> CreditosCliente { get; set; }
        public virtual DbSet<CreditosCliente1> CreditosCliente1 { get; set; }
        public virtual DbSet<DecisionCrediticia> DecisionCrediticia { get; set; }
        public virtual DbSet<FotoCliente> FotoCliente { get; set; }
        public virtual DbSet<ParametrosV> ParametrosV { get; set; }
        public virtual DbSet<Productos> Productos { get; set; }
        public virtual DbSet<Sucursal> Sucursal { get; set; }
        public virtual DbSet<UserState> UserState { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Cargo>(entity =>
            {
                entity.ToTable("Cargo", "Core");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Description)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Cliente>(entity =>
            {
                entity.HasKey(e => e.Identificacion)
                    .HasName("PK__Cliente__D6F931E4A9B6AB5D");

                entity.ToTable("Cliente", "Consulta");

                entity.Property(e => e.Identificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Apellidos)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CoefNumCredActivos).HasColumnType("decimal(18, 12)");

                entity.Property(e => e.CoefTasaDefaultHist).HasColumnType("decimal(18, 12)");

                entity.Property(e => e.Constante).HasColumnType("decimal(18, 12)");

                entity.Property(e => e.CuotaMaxTotalDo)
                    .HasColumnName("CuotaMaxTotalDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMaxTotalExpresDo)
                    .HasColumnName("CuotaMaxTotalExpresDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMaxTotalExpresUs)
                    .HasColumnName("CuotaMaxTotalExpresUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMaxTotalUs)
                    .HasColumnName("CuotaMaxTotalUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMinTotalDo)
                    .HasColumnName("CuotaMinTotalDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMinTotalExpresDo)
                    .HasColumnName("CuotaMinTotalExpresDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMinTotalExpresUs)
                    .HasColumnName("CuotaMinTotalExpresUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMinTotalUs)
                    .HasColumnName("CuotaMinTotalUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPerc50ExpresDo)
                    .HasColumnName("CuotaPerc50ExpresDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPerc50ExpresUs)
                    .HasColumnName("CuotaPerc50ExpresUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPerc75ExpresDo)
                    .HasColumnName("CuotaPerc75ExpresDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPerc75ExpresUs)
                    .HasColumnName("CuotaPerc75ExpresUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPromPrestamoDo)
                    .HasColumnName("CuotaPromPrestamoDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPromTotalExpresDo)
                    .HasColumnName("CuotaPromTotalExpresDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPromTotalExpresUs)
                    .HasColumnName("CuotaPromTotalExpresUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPromedioTarjetaDo)
                    .HasColumnName("CuotaPromedioTarjetaDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPromedioTotalDo)
                    .HasColumnName("CuotaPromedioTotalDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPromedioTotalUs)
                    .HasColumnName("CuotaPromedioTotalUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.DecisionGanadora)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Edad)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.EstadoCivil)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FactorNumCredAct).HasColumnType("decimal(12, 6)");

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaNacimiento)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.FechaUltimos12Meses)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FechaUltimos24Meses)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Imaeprom12).HasColumnName("IMAEProm12");

                entity.Property(e => e.Imaereciente).HasColumnName("IMAEReciente");

                entity.Property(e => e.LimiteLog).HasColumnType("decimal(12, 6)");

                entity.Property(e => e.LimitePd)
                    .HasColumnName("LimitePD")
                    .HasColumnType("decimal(12, 6)");

                entity.Property(e => e.LogBase).HasColumnType("decimal(18, 15)");

                entity.Property(e => e.LogOptimista).HasColumnType("decimal(12, 6)");

                entity.Property(e => e.LogPesimista).HasColumnType("decimal(12, 6)");

                entity.Property(e => e.LugarNacimiento)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MontoMaxCredHistDo).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.MontoMaxCredHistUs).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.Nacionalidad)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NivelRiesgoBase)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NivelRiesgoOptim)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NivelRiesgoPesim)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Nombres)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ParticipacionUnitaria).HasColumnType("decimal(18, 18)");

                entity.Property(e => e.PdBase).HasColumnType("decimal(18, 12)");

                entity.Property(e => e.PdOptimista).HasColumnType("decimal(12, 6)");

                entity.Property(e => e.PdPesimista).HasColumnType("decimal(12, 6)");

                entity.Property(e => e.PromedioCuotaPrestamoDo)
                    .HasColumnName("PromedioCuotaPrestamoDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.PromedioCuotaPrestamoUs)
                    .HasColumnName("PromedioCuotaPrestamoUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.PromedioCuotaTarjetaDo)
                    .HasColumnName("PromedioCuotaTarjetaDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.PromedioCuotaTarjetaUs)
                    .HasColumnName("PromedioCuotaTarjetaUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.RangoPercentScore).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.RangoPercentilScoreOptimista).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.RangoPercentilScorePesimista).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.ResidenciaCalle)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ScoreGanador)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ScoreOptimista).HasColumnType("decimal(12, 4)");

                entity.Property(e => e.ScorePesimista).HasColumnType("decimal(12, 4)");

                entity.Property(e => e.Sector)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Sexo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TipoDeCambio).HasColumnType("decimal(12, 4)");
            });

            modelBuilder.Entity<Cliente1>(entity =>
            {
                entity.ToTable("Cliente", "Historico");

                entity.Property(e => e.Apellidos)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CoefNumCredActivos).HasColumnType("decimal(18, 12)");

                entity.Property(e => e.CoefTasaDefaultHist).HasColumnType("decimal(18, 12)");

                entity.Property(e => e.Constante).HasColumnType("decimal(18, 12)");

                entity.Property(e => e.CuotaMaxTotalDo)
                    .HasColumnName("CuotaMaxTotalDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMaxTotalExpresDo)
                    .HasColumnName("CuotaMaxTotalExpresDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMaxTotalExpresUs)
                    .HasColumnName("CuotaMaxTotalExpresUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMaxTotalUs)
                    .HasColumnName("CuotaMaxTotalUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMinTotalDo)
                    .HasColumnName("CuotaMinTotalDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMinTotalExpresDo)
                    .HasColumnName("CuotaMinTotalExpresDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMinTotalExpresUs)
                    .HasColumnName("CuotaMinTotalExpresUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMinTotalUs)
                    .HasColumnName("CuotaMinTotalUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPerc50ExpresDo)
                    .HasColumnName("CuotaPerc50ExpresDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPerc50ExpresUs)
                    .HasColumnName("CuotaPerc50ExpresUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPerc75ExpresDo)
                    .HasColumnName("CuotaPerc75ExpresDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPerc75ExpresUs)
                    .HasColumnName("CuotaPerc75ExpresUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPromPrestamoDo)
                    .HasColumnName("CuotaPromPrestamoDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPromTotalExpresDo)
                    .HasColumnName("CuotaPromTotalExpresDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPromTotalExpresUs)
                    .HasColumnName("CuotaPromTotalExpresUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPromedioTarjetaDo)
                    .HasColumnName("CuotaPromedioTarjetaDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPromedioTotalDo)
                    .HasColumnName("CuotaPromedioTotalDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPromedioTotalUs)
                    .HasColumnName("CuotaPromedioTotalUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.DecisionGanadora)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Edad)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.EstadoCivil)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FactorNumCredAct).HasColumnType("decimal(12, 6)");

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaNacimiento)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.FechaTrasladoHistorico).HasColumnType("datetime");

                entity.Property(e => e.FechaUltimos12Meses)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FechaUltimos24Meses)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Identificacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Imaeprom12).HasColumnName("IMAEProm12");

                entity.Property(e => e.Imaereciente).HasColumnName("IMAEReciente");

                entity.Property(e => e.LimiteLog).HasColumnType("decimal(12, 6)");

                entity.Property(e => e.LimitePd)
                    .HasColumnName("LimitePD")
                    .HasColumnType("decimal(12, 6)");

                entity.Property(e => e.LogBase).HasColumnType("decimal(18, 15)");

                entity.Property(e => e.LogOptimista).HasColumnType("decimal(12, 6)");

                entity.Property(e => e.LogPesimista).HasColumnType("decimal(12, 6)");

                entity.Property(e => e.LugarNacimiento)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MontoMaxCredHistDo).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.MontoMaxCredHistUs).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.Nacionalidad)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NivelRiesgoBase)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NivelRiesgoOptim)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NivelRiesgoPesim)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Nombres)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ParticipacionUnitaria).HasColumnType("decimal(18, 14)");

                entity.Property(e => e.PdBase).HasColumnType("decimal(18, 12)");

                entity.Property(e => e.PdOptimista).HasColumnType("decimal(12, 6)");

                entity.Property(e => e.PdPesimista).HasColumnType("decimal(12, 6)");

                entity.Property(e => e.PromedioCuotaPrestamoDo)
                    .HasColumnName("PromedioCuotaPrestamoDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.PromedioCuotaPrestamoUs)
                    .HasColumnName("PromedioCuotaPrestamoUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.PromedioCuotaTarjetaDo)
                    .HasColumnName("PromedioCuotaTarjetaDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.PromedioCuotaTarjetaUs)
                    .HasColumnName("PromedioCuotaTarjetaUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.RangoPercentScore).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.RangoPercentilScoreOptimista).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.RangoPercentilScorePesimista).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.ResidenciaCalle)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ScoreGanador)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ScoreOptimista).HasColumnType("decimal(12, 4)");

                entity.Property(e => e.ScorePesimista).HasColumnType("decimal(12, 4)");

                entity.Property(e => e.Sector)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Sexo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TipoDeCambio).HasColumnType("decimal(12, 4)");
            });

            modelBuilder.Entity<ClientesV>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Clientes_v", "Historico");

                entity.Property(e => e.Apellidos)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CoefNumCredActivos).HasColumnType("decimal(18, 12)");

                entity.Property(e => e.CoefTasaDefaultHist).HasColumnType("decimal(18, 12)");

                entity.Property(e => e.Constante).HasColumnType("decimal(18, 12)");

                entity.Property(e => e.CuotaMaxTotalDo)
                    .HasColumnName("CuotaMaxTotalDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMaxTotalExpresDo)
                    .HasColumnName("CuotaMaxTotalExpresDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMaxTotalExpresUs)
                    .HasColumnName("CuotaMaxTotalExpresUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMaxTotalUs)
                    .HasColumnName("CuotaMaxTotalUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMinTotalDo)
                    .HasColumnName("CuotaMinTotalDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMinTotalExpresDo)
                    .HasColumnName("CuotaMinTotalExpresDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMinTotalExpresUs)
                    .HasColumnName("CuotaMinTotalExpresUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaMinTotalUs)
                    .HasColumnName("CuotaMinTotalUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPerc50ExpresDo)
                    .HasColumnName("CuotaPerc50ExpresDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPerc50ExpresUs)
                    .HasColumnName("CuotaPerc50ExpresUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPerc75ExpresDo)
                    .HasColumnName("CuotaPerc75ExpresDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPerc75ExpresUs)
                    .HasColumnName("CuotaPerc75ExpresUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPromPrestamoDo)
                    .HasColumnName("CuotaPromPrestamoDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPromTotalExpresDo)
                    .HasColumnName("CuotaPromTotalExpresDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPromTotalExpresUs)
                    .HasColumnName("CuotaPromTotalExpresUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPromedioTarjetaDo)
                    .HasColumnName("CuotaPromedioTarjetaDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPromedioTotalDo)
                    .HasColumnName("CuotaPromedioTotalDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CuotaPromedioTotalUs)
                    .HasColumnName("CuotaPromedioTotalUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.DecisionGanadora)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Edad)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.EstadoCivil)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FactorNumCredAct).HasColumnType("decimal(12, 6)");

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaNacimiento)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.FechaTrasladoHistorico).HasColumnType("datetime");

                entity.Property(e => e.FechaUltimos12Meses)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FechaUltimos24Meses)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Identificacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Imaeprom12).HasColumnName("IMAEProm12");

                entity.Property(e => e.Imaereciente).HasColumnName("IMAEReciente");

                entity.Property(e => e.LimiteLog).HasColumnType("decimal(12, 6)");

                entity.Property(e => e.LimitePd)
                    .HasColumnName("LimitePD")
                    .HasColumnType("decimal(12, 6)");

                entity.Property(e => e.LogBase).HasColumnType("decimal(18, 15)");

                entity.Property(e => e.LogOptimista).HasColumnType("decimal(12, 6)");

                entity.Property(e => e.LogPesimista).HasColumnType("decimal(12, 6)");

                entity.Property(e => e.LugarNacimiento)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MontoMaxCredHistDo).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.MontoMaxCredHistUs).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.Nacionalidad)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NivelRiesgoBase)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NivelRiesgoOptim)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NivelRiesgoPesim)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Nombres)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ParticipacionUnitaria).HasColumnType("decimal(22, 18)");

                entity.Property(e => e.PdBase).HasColumnType("decimal(18, 12)");

                entity.Property(e => e.PdOptimista).HasColumnType("decimal(12, 6)");

                entity.Property(e => e.PdPesimista).HasColumnType("decimal(12, 6)");

                entity.Property(e => e.PromedioCuotaPrestamoDo)
                    .HasColumnName("PromedioCuotaPrestamoDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.PromedioCuotaPrestamoUs)
                    .HasColumnName("PromedioCuotaPrestamoUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.PromedioCuotaTarjetaDo)
                    .HasColumnName("PromedioCuotaTarjetaDO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.PromedioCuotaTarjetaUs)
                    .HasColumnName("PromedioCuotaTarjetaUS")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.RangoPercentScore).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.RangoPercentilScoreOptimista).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.RangoPercentilScorePesimista).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.ResidenciaCalle)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ScoreGanador)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ScoreOptimista).HasColumnType("decimal(12, 4)");

                entity.Property(e => e.ScorePesimista).HasColumnType("decimal(12, 4)");

                entity.Property(e => e.Sector)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Sexo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TipoDeCambio).HasColumnType("decimal(12, 4)");
            });

            modelBuilder.Entity<CredencialesCdr>(entity =>
            {
                entity.HasKey(e => e.UserId)
                    .HasName("PK__Credenci__1788CC4C67BCE596");

                entity.ToTable("CredencialesCDR", "Usuario");

                entity.Property(e => e.UserId).ValueGeneratedNever();

                entity.Property(e => e.PassDc)
                    .HasColumnName("PassDC")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.UserDc)
                    .HasColumnName("UserDC")
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CreditosCliente>(entity =>
            {
                entity.ToTable("CreditosCliente", "Consulta");

                entity.Property(e => e.Acreedor)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.AtrasoTotal).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CantidadDcuotas).HasColumnName("CantidadDCuotas");

                entity.Property(e => e.CodigoIdentificacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CreditoAprobado).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CreditoDisponible).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CreditosMas60Dias)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cuota).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.DefaultHistorico).HasColumnType("decimal(18, 15)");

                entity.Property(e => e.Destino)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Estatus)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EstatusModificado)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FechaApertura)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaUltimaActual)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FechaUltimaTransaccion)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.GrupoProductos)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.IdCredito)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.IdFechaInicioProdMoneda)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.MesConsolidado)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Moneda)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.PrestamoTarjetasJudicial)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Sector)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TipoProducto)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.TotalAdeudado).HasColumnType("decimal(12, 2)");
            });

            modelBuilder.Entity<CreditosCliente1>(entity =>
            {
                entity.ToTable("CreditosCliente", "Historico");

                entity.Property(e => e.Acreedor)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.AtrasoTotal).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CantidadDcuotas).HasColumnName("CantidadDCuotas");

                entity.Property(e => e.CodigoIdentificacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CreditoAprobado).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CreditoDisponible).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CreditosMas60Dias)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cuota).HasColumnType("decimal(12, 2)");

                entity.Property(e => e.DefaultHistorico).HasColumnType("decimal(18, 15)");

                entity.Property(e => e.Destino)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Estatus)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EstatusModificado)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FechaApertura)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaTrasladoHistorico).HasColumnType("datetime");

                entity.Property(e => e.FechaUltimaActual)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FechaUltimaTransaccion)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.GrupoProductos)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.IdCredito)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.IdFechaInicioProdMoneda)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.MesConsolidado)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Moneda)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.PrestamoTarjetasJudicial)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Sector)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TipoProducto)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.TotalAdeudado).HasColumnType("decimal(12, 2)");
            });

            modelBuilder.Entity<DecisionCrediticia>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DecisionCrediticia", "Consulta");

                entity.Property(e => e.DecisionBase)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DecisionOptimista)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DecisionPesimista)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.NivelRiesgo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FotoCliente>(entity =>
            {
                entity.HasKey(e => e.CodigoIdentificacion)
                    .HasName("PK__FotoClie__77C8B5FE743023A4");

                entity.ToTable("FotoCliente", "Consulta");

                entity.Property(e => e.CodigoIdentificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.Foto).IsUnicode(false);
            });

            modelBuilder.Entity<ParametrosV>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Parametros_v", "Consulta");

                entity.Property(e => e.Imaeprom12).HasColumnName("IMAEProm12");

                entity.Property(e => e.Imaereciente).HasColumnName("IMAEReciente");
            });

            modelBuilder.Entity<Productos>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Productos", "Credito");

                entity.Property(e => e.Comision).HasColumnName("comision");

                entity.Property(e => e.Definicion)
                    .HasColumnName("definicion")
                    .HasColumnType("text");

                entity.Property(e => e.Garantia)
                    .HasColumnName("garantia")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.MontoMinimo).HasColumnName("monto_minimo");

                entity.Property(e => e.PlazoMaximo).HasColumnName("plazo_maximo");

                entity.Property(e => e.PlazoMinimo).HasColumnName("plazo_minimo");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasColumnName("producto")
                    .HasColumnType("text");

                entity.Property(e => e.Reestriccion1)
                    .HasColumnName("reestriccion1")
                    .HasColumnType("text");

                entity.Property(e => e.Reestriccion2)
                    .HasColumnName("reestriccion2")
                    .HasColumnType("text");

                entity.Property(e => e.Reestriccion3)
                    .HasColumnName("reestriccion3")
                    .HasColumnType("text");

                entity.Property(e => e.Reestriccion4)
                    .HasColumnName("reestriccion4")
                    .HasColumnType("text");

                entity.Property(e => e.TasaInteres).HasColumnName("tasa_interes");
            });

            modelBuilder.Entity<Sucursal>(entity =>
            {
                entity.ToTable("Sucursal", "Core");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Description)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<UserState>(entity =>
            {
                entity.ToTable("UserState", "Core");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            OnModelCreatingGeneratedProcedures(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}