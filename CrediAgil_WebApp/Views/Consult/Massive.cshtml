@using Microsoft.AspNetCore.Html;
@using Microsoft.AspNetCore.Hosting;
@using System.IO;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Consulta Masiva";
}

<div class="card">
    <div class="card-body pb-3">
        <h5 class="mb-3">Seleccione el archivo excel que contiene la lista de cedulas:</h5>
        <div class="UppyInput form m">
        </div>
        <div class="UppyInput-Progress">
        </div>
    </div>
</div>

<div id="result" class="card mt-4 d-none">
    <div class="card-body pb-4">
        <h4 class="text-success mt-0 mb-0">
            <i class="fas fa-check-circle text-success"></i>
            Archivo excel subido
        </h4>
        <h4 class="mt-3 mb-0 text-muted consult-progress">
            <span class="spinner-border" style="width: 20px; height: 20px;" role="status">
                <span class="sr-only">Loading...</span>
            </span>
            <span class="mt-1">Realizando consultas...</span>
        </h4>
        <h4 class="text-danger mt-3 mb-0 d-none consult-error">
            <i class="fas fa-times-circle"></i>
            Error en todas las consultas
        </h4>
    </div>
</div>

<div id="consult-success" class="card table-card p-0 mt-4 d-none">
    <div class="card-header">
        <h5>Resultado de las consultas</h5>
    </div>
    <div class="card-body pb-0">
        <div class="table-responsive">
            <table class="table table-hover sortable">
                <thead>
                    <tr>
                        <th class="text-nowrap">Cedula</th>
                        <th class="text-nowrap">Nombre</th>
                        <th class="text-nowrap">Estado</th>
                        <th class="text-nowrap">Decisión Score</th>
                        <th class="text-nowrap">Limites de politica interna</th>
                        <th class="text-nowrap">Cupo de creditos</th>
                        <th class="text-end text-nowrap">Decisión crediticia</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Styles{
    <link rel="stylesheet" href="~/vendor/css/uppy.min.css">

    <style>
        table.sortable thead th{
            cursor: pointer;
            user-select: none;
        }
    </style>
}

    @section Scripts{
    <script src="~/vendor/js/uppy.min.js"></script>
    <script src="~/vendor/js/uppy.locale.min.js"></script>
    <script src="~/vendor/js/moment.min.js"></script>
    <script src="~/vendor/js/bootstrap-sortable.js"></script>

    <script>
        const DragDrop = Uppy.DragDrop;
        const ProgressBar = Uppy.ProgressBar;
        const StatusBar = Uppy.StatusBar;
        const FileInput = Uppy.FileInput;
        const Dashboard = Uppy.Dashboard;

        (function () {
            const pc_uppy_5 = new Uppy.Uppy({
                debug: true, autoProceed: true, locale: Uppy.locales.es_ES, restrictions: {
                    maxNumberOfFiles: 1, allowedFileTypes: ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet']
                }
            })
            pc_uppy_5
                .use(FileInput, { target: '.UppyInput', pretty: false })
                .use(Uppy.XHRUpload, {
                    endpoint: "@Url.Action("UploadMasiveIds", "Consult")",
                    method: 'post',
                    timeout: 0
                })
                .use(StatusBar, {
                    target: '.UppyInput-Progress',
                    hideUploadButton: true,
                    hideAfterFinish: false
                })
                .on('upload', (data) => {
                    uppy_input.classList.add('d-none');
                    reset_upload();
                })
                .on('progress', (progress) => {
                    if (progress == 100)
                        result_box.removeClass('d-none');
                }).on('error', (error) => {
                    uppy_input.classList.remove('d-none');
                    result_box.find('.consult-progress').addClass('d-none');
                    result_box.find('.consult-error').removeClass('d-none');
                }).on('cancel-all', () => {
                    uppy_input.classList.remove('d-none');
                    reset_upload();
                })
                .on('upload-success', (file, response) => {
                    result_box.addClass('d-none');
                    success_box.removeClass('d-none');

                    const table = success_box.find('.table tbody');
                    response.body.forEach(function (result) {
                        const tr = $('<tr>');
                        if (result.Success) {
                            tr.append($('<td>').html('<a  href="@(Url.Action("PerfilCliente"))?id=' + result.Item.Identification + '" target="_blank">' + result.Item.Identification + '</a>'));
                            tr.append($('<td>').text(result.Item.Name));
                            tr.append($('<td>').html('<label class="badge bg-light-success">Correcto</label>'));
                            tr.append($('<td>').text(result.Item.DecisionScore ? 'Pre-Aprobado' : 'Denegado'));
                            tr.append($('<td>').text(result.Item.PolicyLimits ? 'Cumplidos' : 'No cumplidos'));
                            tr.append($('<td>').text(result.Item.CreditsQuota ? 'Disponible' : 'Exceso de creditos'));
                            tr.append($('<td>').html((result.Item.CreditDecision ? '<label class="badge bg-light-success">PRE-APROBADO' : '<label class="badge bg-light-danger">DENEGADO') + '</label>'));
                        } else {
                            tr.append($('<td>').text(result.Item.Identification));
                            tr.append($('<td>').text('-'));
                            tr.append($('<td>').html('<label class="badge bg-light-danger" title="' + result.Message + '">Error</label>'));
                            tr.append($('<td>').text('-'));
                            tr.append($('<td>').text('-'));
                            tr.append($('<td>').text('-'));
                            tr.append($('<td>').text('-'));
                        }

                        table.append(tr);
                    });

                    $.bootstrapSortable({ applyLast: true });

                    table.parent().find('.nosort').append($('<i>', {class: 'fas fa-sort ml-1'}));

                    table.parent().on('sorted', function () {
                        const sorted = table.parent().find('.sorted');
                        
                        table.parent().find('.nosort i').remove();
                        table.parent().find('.nosort').append($('<i>', {class: 'fas fa-sort ml-1'}));
                        sorted.find('i').remove();
                        sorted.find('.sign.arrow.up').addClass('fas').addClass('fa-sort-up').addClass('ml-1').css('font-size', '18px');
                        sorted.find('.sign.arrow').addClass('fas').addClass('fa-sort-down').addClass('ml-1').css('font-size', '18px');
                    });
                })


            const uppy_input = document.querySelector(".uppy-FileInput-input");
            uppy_input.classList.add('form-control');
        })();

        const result_box = $('#result');
        const success_box = $('#consult-success');

        function reset_upload() {
            result_box.addClass('d-none');
            result_box.find('.consult-progress').removeClass('d-none');
            result_box.find('.consult-error').addClass('d-none');
        }
    </script>
}